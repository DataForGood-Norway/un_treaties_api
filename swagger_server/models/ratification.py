# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Ratification(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: int = None,
        date: date = None,
        treaty_id: int = None,
        participant_id: int = None,
    ):  # noqa: E501
        """Ratification - a model defined in Swagger

        :param id: The id of this Ratification.  # noqa: E501
        :type id: int
        :param date: The date of this Ratification.  # noqa: E501
        :type date: date
        :param treaty_id: The treaty_id of this Ratification.  # noqa: E501
        :type treaty_id: int
        :param participant_id: The participant_id of this Ratification.  # noqa: E501
        :type participant_id: int
        """
        self.swagger_types = {
            "id": int,
            "date": date,
            "treaty_id": int,
            "participant_id": int,
        }

        self.attribute_map = {
            "id": "id",
            "date": "date",
            "treaty_id": "treatyId",
            "participant_id": "participantId",
        }

        self._id = id
        self._date = date
        self._treaty_id = treaty_id
        self._participant_id = participant_id

    @classmethod
    def from_dict(cls, dikt) -> "Ratification":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ratification of this Ratification.  # noqa: E501
        :rtype: Ratification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Ratification.


        :return: The id of this Ratification.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Ratification.


        :param id: The id of this Ratification.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def date(self) -> date:
        """Gets the date of this Ratification.


        :return: The date of this Ratification.
        :rtype: date
        """
        return self._date

    @date.setter
    def date(self, date: date):
        """Sets the date of this Ratification.


        :param date: The date of this Ratification.
        :type date: date
        """
        if date is None:
            raise ValueError(
                "Invalid value for `date`, must not be `None`"
            )  # noqa: E501

        self._date = date

    @property
    def treaty_id(self) -> int:
        """Gets the treaty_id of this Ratification.


        :return: The treaty_id of this Ratification.
        :rtype: int
        """
        return self._treaty_id

    @treaty_id.setter
    def treaty_id(self, treaty_id: int):
        """Sets the treaty_id of this Ratification.


        :param treaty_id: The treaty_id of this Ratification.
        :type treaty_id: int
        """
        if treaty_id is None:
            raise ValueError(
                "Invalid value for `treaty_id`, must not be `None`"
            )  # noqa: E501

        self._treaty_id = treaty_id

    @property
    def participant_id(self) -> int:
        """Gets the participant_id of this Ratification.


        :return: The participant_id of this Ratification.
        :rtype: int
        """
        return self._participant_id

    @participant_id.setter
    def participant_id(self, participant_id: int):
        """Sets the participant_id of this Ratification.


        :param participant_id: The participant_id of this Ratification.
        :type participant_id: int
        """
        if participant_id is None:
            raise ValueError(
                "Invalid value for `participant_id`, must not be `None`"
            )  # noqa: E501

        self._participant_id = participant_id
